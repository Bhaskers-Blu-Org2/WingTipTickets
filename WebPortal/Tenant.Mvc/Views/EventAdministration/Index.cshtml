@model Tenant.Mvc.Models.EventAdministrationViewModel
@{
    ViewBag.Title = "AdminPortal";
}

<div class="page-heading">
    <div class="container">
        <div class="row">
            <div class="col-xs-12">
                <h1>Event Administration Portal</h1>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <fieldset>
        <div class="row row-underline-light">
            <h2>Event</h2>
        </div>
        
        <!-- -------------------------------------------------------------------------------------------------------------------------- -->
        <!-- Event Section -->
        <!-- -------------------------------------------------------------------------------------------------------------------------- -->

        <div class="row">
            <div class="col-xs-12 ">
                @using (Html.BeginForm("Index", "EventAdministration", FormMethod.Post, new { @class = "form-horizontal" }))
                {
                    <div class="form-group">
                        <label class="control-label col-xs-1">City</label>
                        <div class="col-xs-11">
                            <div class="col-xs-5">
                                @Html.DropDownListFor(m => m.CityId, @Model.Cities, new { @class = "form-control" })
                            </div>

                            <div class="col-xs-7">
                                @Html.TextBoxFor(m => m.NewCity, new { @class = "form-control", @placeholder = "New City" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-xs-1">Venue</label>
                        <div class="col-xs-11">
                            <div class="col-xs-5">
                                @Html.DropDownListFor(m => m.VenueId, @Model.Venues, new { @class = "form-control" })
                            </div>

                            <div class="col-xs-7">
                                @Html.TextBoxFor(m => m.NewVenue, new { @class = "form-control", @placeholder = "New Venue" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-xs-1">Event</label>
                        <div class="col-xs-11">
                            <div class="col-xs-5">
                                @Html.DropDownListFor(m => m.EventId, @Model.Events, new { @class = "form-control" })
                            </div>

                            <div class=" col-xs-7">
                                @Html.TextBoxFor(m => m.NewEvent, new { @class = "form-control", @placeholder = "New Event" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-xs-1">Artist</label>
                        <div class="col-xs-11">
                            <div class="col-xs-5">
                                @Html.DropDownListFor(m => m.ArtistId, @Model.Artists, new { @class = "form-control" })
                            </div>

                            <div class="col-xs-7">
                                @Html.TextBoxFor(m => m.NewArtist, new { @class = "form-control", @placeholder = "New Artist" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-xs-1">Date</label>
                        <div class="col-xs-11">
                            <div class="col-xs-5">
                                <div class="col-xs-5">
                                    @Html.DropDownListFor(m => m.Month, @Model.Months, new { @class = "form-control" })
                                </div>

                                <div class="col-xs-3">
                                    @Html.DropDownListFor(m => m.Day, @Model.Days, new { @class = "form-control" })
                                </div>

                                <div class="col-xs-4">
                                    @Html.DropDownListFor(m => m.Year, @Model.Years, new { @class = "form-control" })
                                </div>
                            </div>

                            <div class="col-xs-7">
                                @Html.TextAreaFor(m => m.Description, new { @class = "form-control textarea-style", @placeholder = "Description", @rows = 10 })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-xs-12">
                            <div class="btn-group pull-right" style="margin-right: 15px;" role="group">
                                <button type="submit" class="btn btn-themed" id="deleteEvent" name="deleteEvent" >
                                    Delete Event &#62;
                                </button>
                                <button type="submit" class="btn btn-themed" id="addEvent" name="addEvent" >
                                    Add Event &#62;
                                </button>
                            </div>    
                        </div>
                    </div>
                }
            </div>
        </div>                
    </fieldset>
</div>

<!-- -------------------------------------------------------------------------------------------------------------------------- -->
<!-- Script Section -->
<!-- -------------------------------------------------------------------------------------------------------------------------- -->

@section Scripts
{
    <script type="text/javascript" language="javascript">

        var reloadingLists = false;

        $(document).ready(function()
        {
            ToggleNewCity();
            ToggleNewVenue();
            ToggleNewEvent();
            ToggleNewArtist();

            ToggleAdd();
            ToggleDelete();
        });

        $('#CityId').change(function()
        {
            UpdateDropDownValues(UpdateVenues);
        });

        $('#VenueId').change(function()
        {
            UpdateDropDownValues(UpdateEvents);
            
        });

        $('#EventId').change(function()
        {
            UpdateDropDownValues(UpdateArtists);
        });

        function UpdateDropDownValues(callbackFunction)
        {
            var selectedArtistId = $("#ArtistId").val();
            var selectedCityId = $("#CityId").val();
            var selectedVenueId = $("#VenueId").val();
            var selectedEventId = $("#EventId").val();

            $.ajax({
                type: "GET",
                url: '@Url.Action("UpdateLookups", "EventAdministration")',
                data: { artistId: selectedArtistId, cityId: selectedCityId, venueId: selectedVenueId, eventId: selectedEventId },
                dataType: "json",
                success: callbackFunction,
                error: function (jqXHR, textStatus, errorThrown) {
                    debugger;
                }
            });
        }

        function UpdateVenues(data)
        {
            UpdateDropDown(data.model.Venues, "#VenueId", 0);

            $("#EventId").val(0);
            $("#ArtistId").val(0);
        }

        function UpdateEvents(data)
        {
            UpdateDropDown(data.model.Events, "#EventId", 0);

            $("#ArtistId").val(0);
        }

        function UpdateArtists(data)
        {
            UpdateDropDown(data.model.Artists, "#ArtistId", 0);
        }

        function UpdateDropDown(values, name, selectedValue)
        {
            $(name).empty();

            $.each(values, function () {
                $(name).append($("<option />").val(this.Value).text(this.Text));
            });

            $(name).val(selectedValue);
        }

        function ToggleNewCity()
        {
            if ($("#CityId").val() == "-1")
            {
                $("#NewCity").removeAttr("disabled");
            } else
            {
                $("#NewCity").attr("disabled", "disabled");
            }
        }

        function ToggleNewVenue()
        {
            if ($("#VenueId").val() == "-1")
            {
                $("#NewVenue").removeAttr("disabled");
            } else
            {
                $("#NewVenue").attr("disabled", "disabled");
            }
        }

        function ToggleNewEvent()
        {
            if ($("#EventId").val() == "-1")
            {
                $("#NewEvent").removeAttr("disabled");
            } else
            {
                $("#NewEvent").attr("disabled", "disabled");
            }
        }

        function ToggleNewArtist()
        {
            if ($("#ArtistId").val() == "-1")
            {
                $("#NewArtist").removeAttr("disabled");
            } else
            {
                $("#NewArtist").attr("disabled", "disabled");
            }
        }

        function ToggleAdd()
        {
            if ($('#EventId').val() >= -1 && $('#CityId').val() >= -1 && $('#VenueId').val() >= -1)
            {
                $("#addEvent").removeAttr("disabled");
            } else
            {
                $("#addEvent").attr("disabled", "disabled");
            }
        }

        function ToggleDelete()
        {
            if ($('#EventId').val() >= 0 && $('#CityId').val() >= 0 && $('#VenueId').val() >= 0)
            {
                $("#deleteEvent").removeAttr("disabled");
            } else
            {
                $("#deleteEvent").attr("disabled", "disabled");
            }
        }

    </script>
}
