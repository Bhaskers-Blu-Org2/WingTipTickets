@model dynamic

@{
    ViewBag.Title = "Venue Administration";
}

<div class="page-heading">
    <div class="container">
        <div class="row">
            <div class="col-xs-12">
                <h1>Update Venue Information</h1>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <fieldset>
        <div class="row row-underline-light">
            <h2>Venue</h2>
        </div>

        <div class="row">
            <div class="col-xs-12">
                <div class="row">
                    <div class="form-group">
                        <div class="col-xs-4">
                            <label>Meta Data Field Name</label>
                        </div>
                        <div class="col-xs-8">
                            <label>Value</label>
                        </div>
                    </div>
                </div>
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div id="meta-block" class="form-horizontal">
                        <div id="meta-template" class="form-group">
                            <div class="row">
                                <div class="col-xs-4">
                                    <input type="text" name="label" class="documentdb-meta-label form-control" />
                                </div>
                                <div class="col-xs-7">
                                    <input type="text" name="value" class="documentdb-meta-value form-control" />
                                </div>
                                <div class="col-xs-1">
                                    <input type="button" class="documentdb-meta-remove btn btn-danger" value="Delete" />
                                </div>
                            </div>
                            <div class="row error-message alert">
                                <div class="alert alert-danger">Please enter values into both the fields.</div>                                
                            </div>
                        </div>
                    </div>

                    <div class="form-horizontal row row-underline-light">
                        <div class="form-group col-xs-12 col-sm-12">
                            <input type="button" value="Add New" class="documentdb-meta-add btn btn-success" />
                        </div>
                    </div>

                    <div class="form-horizontal row">
                        <div class="form-group col-xs-12 col-sm-12">
                            <input type="button" value="Save to DocumentDb &#62;" class="documentdb-meta-submit btn btn-themed pull-right" />
                        </div>
                    </div>
                }
            </div>
        </div>
    </fieldset>
</div>

<script src="~/Content/Scripts/jquery-1.9.1.min.js"></script>
<script>
    (function () {
        var meta = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model));
        meta = meta.Data;

        var template = $("#meta-template");
        var parent = $("#meta-block");
        var addButtons = $(".documentdb-meta-add");
        var submitBttons = $(".documentdb-meta-submit");

        template.hide();
        template.remove();

        addButtons.on("click", function(){
            AddItem("", "");
        });

        submitBttons.on("click", function(){
            var groups = parent.find(".form-group");

            meta = {};

            $.each(groups, function(index, group){
                group = $(group);

                var labelField = group.find("input[name='label']");
                var valueField = group.find("input[name='value']");

                var _label = labelField.val().trim();
                var _value = valueField.val().trim();

                if((_label.length === 0) || (_value.length === 0)){
                    group.addClass("has-error");
                    group.find(".error-message").slideDown("fast");
                    throw "Fields are blank";
                } else {
                    group.removeClass("has-error");
                }

                meta[_label] = _value;
            });
            parent.find("input").attr("disabled", true);

            $.post(".", {
                id: '@ViewBag.VenueId',
                data: JSON.stringify(meta)
            }).then(function() {
                window.location.href = '@Url.Action("Index", "VenueAdministration")';
            }).always(function() {
                parent.find("input").removeAttr("disabled");
            });
        });


        var AddItem = function(label, value){
            var clone = template.clone();
            clone.removeAttr("id");
            clone.find(".error-message").hide();

            var labelField = clone.find("input[name='label']");
            labelField.val(label);

            var valueField = clone.find("input[name='value']");
            valueField.val(value);

            var removeButton = clone.find("input.documentdb-meta-remove");
            removeButton.on("click", function(){
                var that = $(this);
                var group = that.parents(".form-group");
                group.slideUp("fast", function(){
                    group.remove();
                });
            });

            parent.append(clone);
            clone.slideDown("fast");
        };

        console.log("Adding dynamic elements to the page from Document DB.");
        $.each(meta, function(key, value){
            AddItem(key, value);
        });

    })();
</script>